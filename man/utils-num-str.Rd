% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{utils-num-str}
\alias{utils-num-str}
\alias{round_column}
\alias{extract_number}
\alias{replace_number}
\alias{extract_string}
\alias{replace_string}
\alias{all_upper_case}
\alias{all_lower_case}
\title{Utilities for handling with numbers and strings}
\usage{
round_column(.data, ..., digits = 2)

extract_number(x)

replace_number(x, pattern = NULL, replacement = "")

extract_string(x)

replace_string(x, pattern = NULL, replacement = "")

all_upper_case(.data)

all_lower_case(.data)
}
\arguments{
\item{.data}{A data frame}

\item{...}{Variables to round. If no variable is informed, all the numeric
variables from \code{data} are used.}

\item{digits}{The number of significant figures.}

\item{x}{A numeric value or a string. Vectors are also allowed.}

\item{pattern}{A string to be matched. Regular Expression Syntax is also
allowed.}

\item{replacement}{A string for replacement.}
}
\description{
\itemize{
\item \code{round_column()}: Round a selected column or a whole data frame to
significant figures.
\item \code{extract_number()}: Extract the number(s) of a string.
\item \code{replace_number()}: Replace numbers with a replacement.
\item \code{extract_string()}: Extract all strings, ignoring case.
\item \code{replace_string()}: Replace all strings with a replacement, ignoring
case.
\item \code{all_lower_case()}: Translate all non-numeric strings of a data frame
to lower case. A character vector is also allowed as im
\item \code{all_upper_case()}: Translate all non-numeric strings of a data frame
to upper case.
}
}
\examples{
\donttest{
library(metan)

################ Rounding numbers ###############
# All numeric columns
round_column(data_ge2, digits = 1)

# Round specific columns
round_column(data_ge2, EP, digits = 1)

########### Extract or replace numbers ##########
# Extract numbers
extract_number("GEN_10")
extract_number(data_ge2$GEN)

mutate(data_ge,
       GEN_NUMERIC = extract_number(GEN))

# Replace numbers
mutate(data_ge,
       GEN_NUMERIC = replace_number(GEN))

mutate(data_ge,
       GEN_NUMERIC =
         replace_number(GEN,
                        pattern = "2",
                        with = "_two"))

########## Extract or replace strings ##########
# Extract strings
extract_string("GEN_10")
extract_string(data_ge2$GEN)

mutate(data_ge,
       GEN_STRING = extract_string(GEN))

# Replace strings
mutate(data_ge,
       GEN_STRING = replace_string(GEN))
genotype <-
mutate(data_ge,
       GEN_CODE =
         replace_string(GEN,
                        pattern = "G",
                        with = "GENOTYPE_"))
genotype
############# upper and lower cases ############
all_lower_case("GENOTYPE")
lc <- all_lower_case(data_ge)
lc
all_lower_case(genotype)

all_upper_case("Genotype")
all_upper_case(lc)
}
}
