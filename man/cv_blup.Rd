% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv_blup.R
\name{cv_blup}
\alias{cv_blup}
\title{Cross-validation procedure}
\usage{
cv_blup(.data, env, gen, rep, resp, nboot, nrepval, verbose = TRUE)
}
\arguments{
\item{.data}{The dataset containing the columns related to Environments,
Genotypes, replication/block and response variable(s).}

\item{env}{The name of the column that contains the levels of the
environments.}

\item{gen}{The name of the column that contains the levels of the genotypes.}

\item{rep}{The name of the column that contains the levels of the
replications/blocks.}

\item{resp}{The response variable.}

\item{nboot}{The number of resamples to be used in the cross-validation}

\item{nrepval}{The number of replicates (r) from total number of replicates
(R) to be used in the modeling dataset. Only one replicate is used as
validating data each step, so, \code{Nrepval} must be equal \code{R-1}}

\item{verbose}{A logical argument to define if a progress bar is shown.
Default is \code{TRUE}.}
}
\description{
Cross-validation for blup prediction.
}
\details{
This function provides a cross-validation procedure for mixed models using
replicate-based data. By default, complete blocks are randomly selected
within each evironment. In each iteraction, the original dataset is split up
into two datasets: training and validation data. The "training" set has all
combinations (genotype x environment) with the number of replications
informed in \code{nrepval}. The "validation" set has the remaining
replication. The estimated values are compared with the "validation" data
and the Root Means Square Prediction Difference is computed. At the end of
boots, a list is returned.
}
\examples{

\dontrun{
library(metan)
model = cv_blup(data_ge,
                        env = ENV,
                        gen = GEN,
                        rep = REP,
                        resp = GY,
                        nboot = 100,
                        nrepval = 2)

# Alternatively using the pipe operator \%>\%
library(dplyr)
model = data_ge \%>\%
        cv_blup(ENV, GEN, REP, GY, 100, 2)

}

}
\seealso{
\code{\link{cv_ammi}}, \code{\link{cv_ammif}}
}
\author{
Tiago Olivoto \email{tiagoolivoto@gmail.com}
}
